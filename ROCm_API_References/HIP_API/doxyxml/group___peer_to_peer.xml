<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___peer_to_peer" kind="group">
    <compoundname>PeerToPeer</compoundname>
    <title>Device Memory Access</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___peer_to_peer_1ga0a1c9ccd775758d9d7d5b5a1f525b719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipDeviceCanAccessPeer</definition>
        <argsstring>(int *canAccessPeer, int deviceId, int peerDeviceId)</argsstring>
        <name>hipDeviceCanAccessPeer</name>
        <param>
          <type>int *</type>
          <declname>canAccessPeer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deviceId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>peerDeviceId</declname>
        </param>
        <briefdescription>
<para>Determine if a device can access a peer&apos;s memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">canAccessPeer</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the peer access capability (0 or 1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>- device from where memory may be accessed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- device where memory is physically located</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns &quot;1&quot; in <computeroutput>canAccessPeer</computeroutput> if the specified <computeroutput>device</computeroutput> is capable of directly accessing memory physically located on peerDevice , or &quot;0&quot; if not.</para><para>Returns &quot;0&quot; in <computeroutput>canAccessPeer</computeroutput> if deviceId == peerDeviceId, and both are valid devices : a device is not a peer of itself.</para><para><simplesect kind="return"><para>#hipSuccess, </para></simplesect>
<simplesect kind="return"><para>#hipErrorInvalidDevice if deviceId or peerDeviceId are not valid devices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___peer_to_peer_1ga0caca59034134d7a7bb893cc1caa653e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipDeviceEnablePeerAccess</definition>
        <argsstring>(int peerDeviceId, unsigned int flags)</argsstring>
        <name>hipDeviceEnablePeerAccess</name>
        <param>
          <type>int</type>
          <declname>peerDeviceId</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Enable direct access from current device&apos;s virtual address space to memory allocations physically located on a peer device. </para>        </briefdescription>
        <detaileddescription>
<para>Memory which already allocated on peer device will be mapped into the address space of the current device. In addition, all future memory allocations on peerDeviceId will be mapped into the address space of the current device when the memory is allocated. The peer memory remains accessible from the current device until a call to hipDeviceDisablePeerAccess or hipDeviceReset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerDeviceId</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns #hipSuccess, #hipErrorInvalidDevice, #hipErrorInvalidValue, </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#hipErrorPeerAccessAlreadyEnabled if peer access is already enabled for this device. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___peer_to_peer_1ga85030c72824fb60aaddc7374ab60481b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipDeviceDisablePeerAccess</definition>
        <argsstring>(int peerDeviceId)</argsstring>
        <name>hipDeviceDisablePeerAccess</name>
        <param>
          <type>int</type>
          <declname>peerDeviceId</declname>
        </param>
        <briefdescription>
<para>Disable direct access from current device&apos;s virtual address space to memory allocations physically located on a peer device. </para>        </briefdescription>
        <detaileddescription>
<para>Returns hipErrorPeerAccessNotEnabled if direct access to memory on peerDevice has not yet been enabled from the current device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerDeviceId</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#hipSuccess, #hipErrorPeerAccessNotEnabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___peer_to_peer_1gac7d9132f6e3d102e9b512020e5654f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipMemGetAddressRange</definition>
        <argsstring>(hipDeviceptr_t *pbase, size_t *psize, hipDeviceptr_t dptr)</argsstring>
        <name>hipMemGetAddressRange</name>
        <param>
          <type>hipDeviceptr_t *</type>
          <declname>pbase</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>psize</declname>
        </param>
        <param>
          <type>hipDeviceptr_t</type>
          <declname>dptr</declname>
        </param>
        <briefdescription>
<para>Get information on memory allocations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">pbase</parametername>
</parameternamelist>
<parameterdescription>
<para>- BAse pointer address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">psize</parametername>
</parameternamelist>
<parameterdescription>
<para>- Size of allocation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dptr-</parametername>
</parameternamelist>
<parameterdescription>
<para>Device Pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#hipSuccess, #hipErrorInvalidDevicePointer</para></simplesect>
<simplesect kind="see"><para><ref refid="group___context_1gaa12f756681adc03b1f7247b3932a443f" kindref="member">hipCtxCreate</ref>, <ref refid="group___context_1ga36458cd6ece33d8161bec91a7014a74f" kindref="member">hipCtxDestroy</ref>, <ref refid="group___context_1ga93d0d491063463fe7fc00306f792d332" kindref="member">hipCtxGetFlags</ref>, <ref refid="group___context_1gaf67ed47a9a89b9174f81bbea2a60a6cc" kindref="member">hipCtxPopCurrent</ref>, <ref refid="group___context_1ga63dc7702243a3620a0a69b850795d80b" kindref="member">hipCtxGetCurrent</ref>, <ref refid="group___context_1ga80263bdac9fc2577fb8b0e0ca4157502" kindref="member">hipCtxSetCurrent</ref>, <ref refid="group___context_1gad17f4f4c69760477ea72228ace45b43b" kindref="member">hipCtxPushCurrent</ref>, <ref refid="group___context_1gadf7f3ac2604d21f32a51c910765d39df" kindref="member">hipCtxSetCacheConfig</ref>, <ref refid="group___context_1ga3b0b50f1ebb0aa5d8cf410d5ed24448d" kindref="member">hipCtxSynchronize</ref>, <ref refid="group___context_1gab9bdfa36130a513602fdc0dc69e6c36d" kindref="member">hipCtxGetDevice</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___peer_to_peer_1ga5512f45e25c08052667c8ffe7162333b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipMemcpyPeer</definition>
        <argsstring>(void *dst, int dstDeviceId, const void *src, int srcDeviceId, size_t sizeBytes)</argsstring>
        <name>hipMemcpyPeer</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dstDeviceId</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcDeviceId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sizeBytes</declname>
        </param>
        <briefdescription>
<para>Copies memory from one device to memory on another device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>- Destination device pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstDeviceId</parametername>
</parameternamelist>
<parameterdescription>
<para>- Destination device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source device pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcDeviceId</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sizeBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- Size of memory copy in bytes</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#hipSuccess, #hipErrorInvalidValue, #hipErrorInvalidDevice </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___peer_to_peer_1ga6f500e146a98bb41a5972fe091fcc4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hipError_t</type>
        <definition>hipError_t hipMemcpyPeerAsync</definition>
        <argsstring>(void *dst, int dstDeviceId, const void *src, int srcDevice, size_t sizeBytes, hipStream_t stream __dparm(0))</argsstring>
        <name>hipMemcpyPeerAsync</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dstDeviceId</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcDevice</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sizeBytes</declname>
        </param>
        <param>
          <type>hipStream_t stream </type>
          <declname>__dparm</declname>
          <array>0</array>
        </param>
        <briefdescription>
<para>Copies memory from one device to memory on another device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>- Destination device pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- Destination device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source device pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sizeBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- Size of memory copy in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>- Stream identifier</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#hipSuccess, #hipErrorInvalidValue, #hipErrorInvalidDevice </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1875" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___peer_to_peer_1ga898bad8d5d67a63d7264d9038e02306a" prot="public" static="no">
        <name>USE_PEER_NON_UNIFIED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" line="1845" column="9" bodyfile="/home/tcs/hip_api_doxygen_test/HIP/include/hip/hcc_detail/hip_runtime_api.h" bodystart="1845" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><hruler/>
 <hruler/>
 </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>PeerToPeer support is experimental. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
